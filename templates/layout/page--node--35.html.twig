<!-- Python Search Program -->

<lead>
<link rel="stylesheet" href="https://library.anderson.edu/themes/niclib2021/assets/vendor/bootstrap/css/bootstrap.min.css">
<link rel="stylesheet" href="https://library.anderson.edu/themes/niclib2021/assets/css/main.css" id="theme-link">
<link rel="stylesheet" href="https://library.anderson.edu/themes/niclib2021/assets/css/media-queries.css">
<script src="https://library.anderson.edu/themes/niclib2021/assets/vendor/jquery/jquery-3.4.1.min.js"></script>
<script src="https://library.anderson.edu/themes/niclib2021/assets/vendor/jquery/popper.js"></script>
<link rel="stylesheet" href="https://pyscript.net/alpha/pyscript.css" />
<script defer src="https://pyscript.net/alpha/pyscript.js"></script>
</lead>
<header>
<nav class="navbar navbar-expand-lg">
    <a class="navbar-brand" href="/"></a>
    <a href="/hours" class="headerHours"><em>Today's Hours: <span class="displayHours"></span></em></a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span> Menu
    </button>

    <div class="main-menu">
        <div class="justify-content-end">
            <ul class="nav">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownStudents" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Students</a>
                    <div class="dropdown-menu dropdown-menu-lg-right" aria-label="Students dropdown menu">

                        {{ page.nav_students }}

                        <div class="dropdown-divider"></div>
                        <h5 class="dropdown-RR"><b>Recommended Resources</b></h5>

                        {{ page.nav_students_rec_resources }}

                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item" href="/contact">Contact a Librarian</a>
                    </div>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownFaculty" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Faculty</a>
                    <div class="dropdown-menu dropdown-menu-lg-right" aria-label="Faculty dropdown menu">

                        {{ page.nav_faculty }}

                        <div class="dropdown-divider"></div>
                        <h5 class="dropdown-RR"><b>Recommended Resources</b></h5>

                        {{ page.nav_faculty_rec_resources }}

                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item" href="/contact">Contact a Librarian</a>
                    </div>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownArchives" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Archives</a>
                    <div class="dropdown-menu dropdown-menu-lg-right" aria-label="Archives dropdown menu">

                        {{ page.nav_archives }}

                        <div class="dropdown-divider"></div>
          
                        <a class="dropdown-item" href="/contact">Contact a Librarian</a>
                    </div>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownAbout" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">About</a>
                    <div class="dropdown-menu dropdown-menu-lg-right" aria-label="About dropdown menu">

                        {{ page.nav_about }}

                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item" href="/contact">Contact a Librarian</a>
                    </div>
                </li>
            </ul>
        </div>
    </div>

    <div class="mobile-menu collapse" id="navbarSupportedContent">
        <ul class="mobile-parent-menu">
            <li class="mobile-menu-item">Students <span class="menu-expand-icon"><i class="fas fa-caret-down"></i></span>
                <ul class="mobile-child-menu">

                    {{ page.mobile_nav_students }}

                </ul>
            </li>
            <li class="mobile-menu-item">Faculty <span class="menu-expand-icon"><i class="fas fa-caret-down"></i></span>
                <ul class="mobile-child-menu">

                    {{ page.mobile_nav_faculty }}

                </ul>
            </li>
            <li class="mobile-menu-item">Archives <span class="menu-expand-icon"><i class="fas fa-caret-down"></i></span>
                <ul class="mobile-child-menu">

                    {{ page.mobile_nav_archives }}

                </ul>
            </li>
            <li class="mobile-menu-item">About <span class="menu-expand-icon"><i class="fas fa-caret-down"></i></span>
                <ul class="mobile-child-menu">

                    {{ page.mobile_nav_about }}

                </ul>
            </li>
            <li class="mobile-menu-item"><a href="/contact">Contact a Librarian</a></li>
        </ul>
    </div>

</nav>
</header>

<main>
	<div id="spacing" style="padding-top:.35em;">
	</div>
    <div>
		<py-script>
			import os
import time
import webbrowser


def gatherInfo():
    print('''Please select the type of book from the following list:
1- Fiction | 2- Non-fiction | 3- Periodical | 4- Juvenile | 5- Other''')
    medium = input("Option: ")
    while medium != '1' and medium == '2' and medium == '3' and medium == '4' and medium == '5':
        medium = input("Please enter a valid number: ")
    return medium


def gatherTitle():
    print("\nOmitting symbols, spaces, and any preceding 'the' or 'a'")
    title = input("What are the first two characters of the title? ")
    while not title.isalnum() or len(title.strip()) != 2:
        title = input("Please enter the first two alphanumeric characters. ")
    return title


def search(mediatype):
    if mediatype == '1':
        shelves_list = ["001a", "001a", "001b"]
    if mediatype == '2':
        shelves_list = ["001a", "001a", "001b"]
    if mediatype == '3':
        shelves_list = ["001a", "001a", "001b"]
    if mediatype == '4':
        shelves_list = ["001a", "001a", "001b"]
    if mediatype == '5':
        shelves_list = ["001a", "001a", "001b"]
    return shelves_list


def findShelf(title, shelves_list):
    alphabet = ['00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '0g', '0h', '0i', '0j', '0k', '0l', '0m', '0n', '0p', '0q', '0r', '0s', '0t', '0u', '0v', '0w', '0x', '0y', '0z', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '1g', '1h', '1i', '1j', '1k', '1l', '1m', '1n', '1o', '1p', '1q', '1r', '1s', '1t', '1u', '1v', '1w', '1x', '1y', '1z', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '2g', '2h', '2i', '2j', '2k', '2l', '2m', '2n', '2o', '2p', '2q', '2r', '2s', '2t', '2u', '2v', '2w', '2x', '2y', '2z', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '3g', '3h', '3i', '3j', '3k', '3l', '3m', '3n', '3o', '3p', '3q', '3r', '3s', '3t', '3u', '3v', '3w', '3x', '3y', '3z', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '4g', '4h', '4i', '4j', '4k', '4l', '4m', '4n', '4o', '4p', '4q', '4r', '4s', '4t', '4u', '4v', '4w', '4x', '4y', '4z', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '5g', '5h', '5i', '5j', '5k', '5l', '5m', '5n', '5o', '5p', '5q', '5r', '5s', '5t', '5u', '5v', '5w', '5x', '5y', '5z', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '6g', '6h', '6i', '6j', '6k', '6l', '6m', '6n', '6o', '6p', '6q', '6r', '6s', '6t', '6u', '6v', '6w', '6x', '6y', '6z', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '7g', '7h', '7i', '7j', '7k', '7l', '7m', '7n', '7o', '7p', '7q', '7r', '7s', '7t', '7u', '7v', '7w', '7x', '7y', '7z', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '8g', '8h', '8i', '8j', '8k', '8l', '8m', '8n', '8o', '8p', '8q', '8r', '8s', '8t', '8u', '8v', '8w', '8x', '8y', '8z', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', '9g', '9h', '9i', '9j', '9k', '9l', '9m', '9n', '9o', '9p', '9q', '9r', '9s', '9t', '9u', '9v', '9w', '9x', '9y', '9z', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'ag', 'ah', 'ai', 'aj', 'ak', 'al', 'am', 'an', 'ao', 'ap', 'aq', 'ar', 'as', 'at', 'au', 'av', 'aw', 'ax', 'ay', 'az', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'bg', 'bh', 'bi', 'bj', 'bk', 'bl', 'bm', 'bn', 'bo', 'bp', 'bq', 'br', 'bs', 'bt', 'bu', 'bv', 'bw', 'bx', 'by', 'bz', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'cg', 'ch', 'ci', 'cj', 'ck', 'cl', 'cm', 'cn', 'co', 'cp', 'cq', 'cr', 'cs', 'ct', 'cu', 'cv', 'cw', 'cx', 'cy', 'cz', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'dg', 'dh', 'di', 'dj', 'dk', 'dl', 'dm', 'dn', 'do', 'dp', 'dq', 'dr', 'ds', 'dt', 'du', 'dv', 'dw', 'dx', 'dy', 'dz', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'eg', 'eh', 'ei', 'ej', 'ek', 'el', 'em', 'en', 'eo', 'ep', 'eq', 'er', 'es', 'et', 'eu', 'ev', 'ew', 'ex', 'ey', 'ez', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff', 'fg', 'fh', 'fi', 'fj', 'fk', 'fl', 'fm', 'fn', 'fo', 'fp', 'fq', 'fr', 'fs', 'ft', 'fu', 'fv', 'fw', 'fx', 'fy', 'fz', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'ga', 'gb', 'gc', 'gd', 'ge', 'gf', 'gg', 'gh', 'gi', 'gj', 'gk', 'gl', 'gm', 'gn', 'go', 'gp', 'gq', 'gr', 'gs', 'gt', 'gu', 'gv', 'gw', 'gx', 'gy', 'gz', 'g0', 'g1', 'g2', 'g3', 'g4', 'g5', 'g6', 'g7', 'g8', 'g9', 'ha', 'hb', 'hc', 'hd', 'he', 'hf', 'hg', 'hh', 'hi', 'hj', 'hk', 'hl', 'hm', 'hn', 'ho', 'hp', 'hq', 'hr', 'hs', 'ht', 'hu', 'hv', 'hw', 'hx', 'hy', 'hz', 'h0', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'h7', 'h8', 'h9', 'ia', 'ib', 'ic', 'id', 'ie', 'if', 'ig', 'ih', 'ii', 'ij', 'ik', 'il', 'im', 'in', 'io', 'ip', 'iq', 'ir', 'is', 'it', 'iu', 'iv', 'iw', 'ix', 'iy', 'iz', 'i0', 'i1', 'i2', 'i3', 'i4', 'i5', 'i6', 'i7', 'i8', 'i9', 'ja', 'jb', 'jc', 'jd', 'je', 'jf', 'jg', 'jh', 'ji', 'jj', 'jk', 'jl', 'jm', 'jn', 'jo', 'jp', 'jq', 'jr', 'js', 'jt', 'ju', 'jv', 'jw', 'jx', 'jy', 'jz', 'j0', 'j1', 'j2', 'j3', 'j4', 'j5', 'j6', 'j7', 'j8', 'j9', 'ka', 'kb', 'kc', 'kd', 'ke', 'kf', 'kg', 'kh', 'ki', 'kj', 'kk', 'kl', 'km', 'kn', 'ko', 'kp', 'kq', 'kr', 'ks', 'kt', 'ku', 'kv', 'kw', 'kx', 'ky', 'kz', 'k0', 'k1', 'k2', 'k3', 'k4', 'k5', 'k6', 'k7', 'k8', 'k9', 'la', 'lb', 'lc', 'ld', 'le', 'lf', 'lg', 'lh', 'li', 'lj', 'lk', 'll', 'lm', 'ln', 'lo', 'lp', 'lq', 'lr', 'ls', 'lt', 'lu', 'lv', 'lw', 'lx', 'ly', 'lz', 'l0', 'l1', 'l2', 'l3', 'l4', 'l5', 'l6', 'l7', 'l8', 'l9', 'ma', 'mb', 'mc', 'md', 'me', 'mf', 'mg', 'mh', 'mi', 'mj', 'mk', 'ml', 'mm', 'mn', 'mo', 'mp', 'mq', 'mr', 'ms', 'mt', 'mu', 'mv', 'mw', 'mx', 'my', 'mz', 'm0', 'm1', 'm2', 'm3', 'm4', 'm5', 'm6', 'm7', 'm8', 'm9', 'na', 'nb', 'nc', 'nd', 'ne', 'nf', 'ng', 'nh', 'ni', 'nj', 'nk', 'nl', 'nm', 'nn', 'no', 'np', 'nq', 'nr', 'ns', 'nt', 'nu', 'nv', 'nw', 'nx', 'ny', 'nz', 'n0', 'n1', 'n2', 'n3', 'n4', 'n5', 'n6', 'n7', 'n8', 'n9', 'oa', 'ob', 'oc', 'od', 'oe', 'of', 'og', 'oh', 'oi', 'oj', 'ok', 'ol', 'om', 'on', 'oo', 'op', 'oq', 'or', 'os', 'ot', 'ou', 'ov', 'ow', 'ox', 'oy', 'oz', 'o0', 'o1', 'o2', 'o3', 'o4', 'o5', 'o6', 'o7', 'o8', 'o9', '0o', 'pa', 'pb', 'pc', 'pd', 'pe', 'pf', 'pg', 'ph', 'pi', 'pj', 'pk', 'pl', 'pm', 'pn', 'po', 'pp', 'pq', 'pr', 'ps', 'pt', 'pu', 'pv', 'pw', 'px', 'py', 'pz', 'p0', 'p1', 'p2', 'p3', 'p4', 'p5', 'p6', 'p7', 'p8', 'p9', 'qa', 'qb', 'qc', 'qd', 'qe', 'qf', 'qg', 'qh', 'qi', 'qj', 'qk', 'ql', 'qm', 'qn', 'qo', 'qp', 'qq', 'qr', 'qs', 'qt', 'qu', 'qv', 'qw', 'qx', 'qy', 'qz', 'q0', 'q1', 'q2', 'q3', 'q4', 'q5', 'q6', 'q7', 'q8', 'q9', 'ra', 'rb', 'rc', 'rd', 're', 'rf', 'rg', 'rh', 'ri', 'rj', 'rk', 'rl', 'rm', 'rn', 'ro', 'rp', 'rq', 'rr', 'rs', 'rt', 'ru', 'rv', 'rw', 'rx', 'ry', 'rz', 'r0', 'r1', 'r2', 'r3', 'r4', 'r5', 'r6', 'r7', 'r8', 'r9', 'sa', 'sb', 'sc', 'sd', 'se', 'sf', 'sg', 'sh', 'si', 'sj', 'sk', 'sl', 'sm', 'sn', 'so', 'sp', 'sq', 'sr', 'ss', 'st', 'su', 'sv', 'sw', 'sx', 'sy', 'sz', 's0', 's1', 's2', 's3', 's4', 's5', 's6', 's7', 's8', 's9', 'ta', 'tb', 'tc', 'td', 'te', 'tf', 'tg', 'th', 'ti', 'tj', 'tk', 'tl', 'tm', 'tn', 'to', 'tp', 'tq', 'tr', 'ts', 'tt', 'tu', 'tv', 'tw', 'tx', 'ty', 'tz', 't0', 't1', 't2', 't3', 't4', 't5', 't6', 't7', 't8', 't9', 'ua', 'ub', 'uc', 'ud', 'ue', 'uf', 'ug', 'uh', 'ui', 'uj', 'uk', 'ul', 'um', 'un', 'uo', 'up', 'uq', 'ur', 'us', 'ut', 'uu', 'uv', 'uw', 'ux', 'uy', 'uz', 'u0', 'u1', 'u2', 'u3', 'u4', 'u5', 'u6', 'u7', 'u8', 'u9', 'va', 'vb', 'vc', 'vd', 've', 'vf', 'vg', 'vh', 'vi', 'vj', 'vk', 'vl', 'vm', 'vn', 'vo', 'vp', 'vq', 'vr', 'vs', 'vt', 'vu', 'vv', 'vw', 'vx', 'vy', 'vz', 'v0', 'v1', 'v2', 'v3', 'v4', 'v5', 'v6', 'v7', 'v8', 'v9', 'wa', 'wb', 'wc', 'wd', 'we', 'wf', 'wg', 'wh', 'wi', 'wj', 'wk', 'wl', 'wm', 'wn', 'wo', 'wp', 'wq', 'wr', 'ws', 'wt', 'wu', 'wv', 'ww', 'wx', 'wy', 'wz', 'w0', 'w1', 'w2', 'w3', 'w4', 'w5', 'w6', 'w7', 'w8', 'w9', 'xa', 'xb', 'xc', 'xd', 'xe', 'xf', 'xg', 'xh', 'xi', 'xj', 'xk', 'xl', 'xm', 'xn', 'xo', 'xp', 'xq', 'xr', 'xs', 'xt', 'xu', 'xv', 'xw', 'xx', 'xy', 'xz', 'x0', 'x1', 'x2', 'x3', 'x4', 'x5', 'x6', 'x7', 'x8', 'x9', 'ya', 'yb', 'yc', 'yd', 'ye', 'yf', 'yg', 'yh', 'yi', 'yj', 'yk', 'yl', 'ym', 'yn', 'yo', 'yp', 'yq', 'yr', 'ys', 'yt', 'yu', 'yv', 'yw', 'yx', 'yy', 'yz', 'y0', 'y1', 'y2', 'y3', 'y4', 'y5', 'y6', 'y7', 'y8', 'y9', 'za', 'zb', 'zc', 'zd', 'ze', 'zf', 'zg', 'zh', 'zi', 'zj', 'zk', 'zl', 'zm', 'zn', 'zo', 'zp', 'zq', 'zr', 'zs', 'zt', 'zu', 'zv', 'zw', 'zx', 'zy', 'zz', 'z0', 'z1', 'z2', 'z3', 'z4', 'z5', 'z6', 'z7', 'z8', 'z9']
    for i in range(len(alphabet)):
        if alphabet[i] == title:
            slot = i
            shelf = shelves_list[slot]
            break
    return shelf

def callNum():
    letters = ['A', 'AA', 'AB', 'AC', 'AD', 'AE', 'AF', 'AG', 'AH', 'AI', 'AJ', 'AK', 'AL', 'AM', 'AN', 'AO', 'AP', 'AQ', 'AR', 'AS', 'AT', 'AU', 'AV', 'AW', 'AX', 'AY', 'AZ', 'B', 'BA', 'BB', 'BC', 'BD', 'BE', 'BF', 'BG', 'BH', 'BI', 'BJ', 'BK', 'BL', 'BM', 'BN', 'BO', 'BP', 'BQ', 'BR', 'BS', 'BT', 'BU', 'BV', 'BW', 'BX', 'BY', 'BZ', 'C', 'CA', 'CB', 'CC', 'CD', 'CE', 'CF', 'CG', 'CH', 'CI', 'CJ', 'CK', 'CL', 'CM', 'CN', 'CO', 'CP', 'CQ', 'CR', 'CS', 'CT', 'CU', 'CV', 'CW', 'CX', 'CY', 'CZ',  'D', 'DA', 'DB', 'DC', 'DD', 'DE', 'DF', 'DG', 'DH', 'DI', 'DJ', 'DK', 'DL', 'DM', 'DN', 'DO', 'DP', 'DQ', 'DR', 'DS', 'DT', 'DU', 'DV', 'DW', 'DX', 'DY', 'DZ', 'E', 'EA', 'EB', 'EC', 'ED', 'EE', 'EF', 'EG', 'EH', 'EI', 'EJ', 'EK', 'EL', 'EM', 'EN', 'EO', 'EP', 'EQ', 'ER', 'ES', 'ET', 'EU', 'EV', 'EW', 'EX', 'EY', 'EZ', 'F',  'FA', 'FB', 'FC', 'FD', 'FE', 'FF', 'FG', 'FH', 'FI', 'FJ', 'FK', 'FL', 'FM', 'FN', 'FO', 'FP', 'FQ', 'FR', 'FS', 'FT', 'FU', 'FV', 'FW', 'FX', 'FY', 'FZ', 'G', 'GA', 'GB', 'GC', 'GD', 'GE', 'GF', 'GG', 'GH', 'GI', 'GJ', 'GK', 'GL', 'GM', 'GN', 'GO', 'GP', 'GQ', 'GR', 'GS', 'GT', 'GU', 'GV', 'GW', 'GX', 'GY', 'GZ', 'H', 'HA', 'HB', 'HC', 'HD', 'HE', 'HF', 'HG', 'HH', 'HI', 'HJ', 'HK', 'HL', 'HM', 'HN', 'HO', 'HP', 'HQ', 'HR', 'HS', 'HT', 'HU', 'HV', 'HW', 'HX', 'HY', 'HZ', 'I', 'IA', 'IB', 'IC', 'ID', 'IE', 'IF', 'IG', 'IH', 'II', 'IJ', 'IK', 'IL', 'IM', 'IN', 'IO', 'IP', 'IQ', 'IR', 'IS', 'IT', 'IU', 'IV', 'IW', 'IX', 'IY', 'IZ', 'J', 'JA', 'JB', 'JC', 'JD', 'JE', 'JF', 'JG', 'JH', 'JI', 'JJ', 'JK', 'JL', 'JM', 'JN', 'JO', 'JP', 'JQ', 'JR', 'JS', 'JT', 'JU', 'JV', 'JW', 'JX', 'JY', 'JZ', 'K', 'KA', 'KB', 'KC', 'KD', 'KE', 'KF', 'KG', 'KH', 'KI', 'KJ', 'KK', 'KL', 'KM', 'KN', 'KO', 'KP', 'KQ', 'KR', 'KS', 'KT', 'KU', 'KV', 'KW', 'KX', 'KY', 'KZ', 'L', 'LA', 'LB', 'LC', 'LD', 'LE', 'LF', 'LG', 'LH', 'LI', 'LJ', 'LK', 'LL', 'LM', 'LN', 'LO', 'LP', 'LQ', 'LR', 'LS', 'LT', 'LU', 'LV', 'LW', 'LX', 'LY', 'LZ', 'M', 'MA', 'MB', 'MC', 'MD', 'ME', 'MF', 'MG', 'MH', 'MI', 'MJ', 'MK', 'ML', 'MM', 'MN', 'MO', 'MP', 'MQ', 'MR', 'MS', 'MT', 'MU', 'MV', 'MW', 'MX', 'MY', 'MZ', 'N', 'NA', 'NB', 'NC', 'ND', 'NE', 'NF', 'NG', 'NH', 'NI', 'NJ', 'NK', 'NL', 'NM', 'NN', 'NO', 'NP', 'NQ', 'NR', 'NS', 'NT', 'NU', 'NV', 'NW', 'NX', 'NY', 'NZ', 'O', 'OA', 'OB', 'OC', 'OD', 'OE', 'OF', 'OG', 'OH', 'OI', 'OJ', 'OK', 'OL', 'OM', 'ON', 'OO', 'OP', 'OQ', 'OR', 'OS', 'OT', 'OU', 'OV', 'OW', 'OX', 'OY', 'OZ', 'P', 'PA', 'PB', 'PC', 'PD', 'PE', 'PF', 'PG', 'PH', 'PI', 'PJ', 'PK', 'PL', 'PM', 'PN', 'PO', 'PP', 'PQ', 'PR', 'PS', 'PT', 'PU', 'PV', 'PW', 'PX', 'PY', 'PZ', 'Q', 'QA', 'QB', 'QC', 'QD', 'QE', 'QF', 'QG', 'QH', 'QI', 'QJ', 'QK', 'QL', 'QM', 'QN', 'QO', 'QP', 'QQ', 'QR', 'QS', 'QT', 'QU', 'QV', 'QW', 'QX', 'QY', 'QZ', 'R', 'RA', 'RB', 'RC', 'RD', 'RE', 'RF', 'RG', 'RH', 'RI', 'RJ', 'RK', 'RL', 'RM', 'RN', 'RO', 'RP', 'RQ', 'RR', 'RS', 'RT', 'RU', 'RV', 'RW', 'RX', 'RY', 'RZ', 'S', 'SA', 'SB', 'SC', 'SD', 'SE', 'SF', 'SG', 'SH', 'SI', 'SJ', 'SK', 'SL', 'SM', 'SN', 'SO', 'SP', 'SQ', 'SR', 'SS', 'ST', 'SU', 'SV', 'SW', 'SX', 'SY', 'SZ', 'T', 'TA', 'TB', 'TC', 'TD', 'TE', 'TF', 'TG', 'TH', 'TI', 'TJ', 'TK', 'TL', 'TM', 'TN', 'TO', 'TP', 'TQ', 'TR', 'TS', 'TT', 'TU', 'TV', 'TW', 'TX', 'TY', 'TZ', 'U', 'UA', 'UB', 'UC', 'UD', 'UE', 'UF', 'UG', 'UH', 'UI', 'UJ', 'UK', 'UL', 'UM', 'UN', 'UO', 'UP', 'UQ', 'UR', 'US', 'UT', 'UU', 'UV', 'UW', 'UX', 'UY', 'UZ', 'V', 'VA', 'VB', 'VC', 'VD', 'VE', 'VF', 'VG', 'VH', 'VI', 'VJ', 'VK', 'VL', 'VM', 'VN', 'VO', 'VP', 'VQ', 'VR', 'VS', 'VT', 'VU', 'VV', 'VW', 'VX', 'VY', 'VZ', 'W', 'WA', 'WB', 'WC', 'WD', 'WE', 'WF', 'WG', 'WH', 'WI', 'WJ', 'WK', 'WL', 'WM', 'WN', 'WO', 'WP', 'WQ', 'WR', 'WS', 'WT', 'WU', 'WV', 'WW', 'WX', 'WY', 'WZ', 'X', 'XA', 'XB', 'XC', 'XD', 'XE', 'XF', 'XG', 'XH', 'XI', 'XJ', 'XK', 'XL', 'XM', 'XN', 'XO', 'XP', 'XQ', 'XR', 'XS', 'XT', 'XU', 'XV', 'XW', 'XX', 'XY', 'XZ', 'Y', 'YA', 'YB', 'YC', 'YD', 'YE', 'YF', 'YG', 'YH', 'YI', 'YJ', 'YK', 'YL', 'YM', 'YN', 'YO', 'YP', 'YQ', 'YR', 'YS', 'YT', 'YU', 'YV', 'YW', 'YX', 'YY', 'YZ', 'Z', 'ZA', 'ZB', 'ZC', 'ZD', 'ZE', 'ZF', 'ZG', 'ZH', 'ZI', 'ZJ', 'ZK', 'ZL', 'ZM', 'ZN', 'ZO', 'ZP', 'ZQ', 'ZR', 'ZS', 'ZT', 'ZU', 'ZV', 'ZW', 'ZX', 'ZY', 'ZZ']
    validl = False
    call = input("Please enter the capitalized letter(s): ")
    while not validl:
        for letter in letters:
            if letter == call:
                validl = True
                break
        if validl:
            break
        call = input("Please enter a valid capitalized letter(s): ")
    validn = False
    num = input("Please enter the digits preceding the first '.': ")
    while not validn:
        for i in range(1, 9999):
            if int(num) == i:
                validn = True
                break
        if validn:
            break
        num = input("Please enter a valid number: ")
    for i in range(len(letters)):
        if letters[i] == call:
            if i <= 26:
                return '001a'
            if i == 27:
                if int(num) <= 59:
                    return '001a'
                if int(num) <= 819:
                    return '002a'
                if int(num) <= 2422:
                    return '002b'
                else:
                    return '001b'
            if i <= 29:
                return '001b'
            if i == 30:
                if int(num) <= 108:
                    return '001b'
                else:
                    return '003a'
            if i <= 32:
                return '003a'
            if i == 33:
                if int(num) <= 38:
                    return '003a'
                if int(num) <= 181:
                    return '004a'
                if int(num) <= 575:
                    return '004b'
                if int(num) <= 673:
                    return '003b'
                if int(num) <= 723:
                    return '005a'
                else:
                    return '006a'
            if i <= 36:
                return '006a'
            if i == 37:
                if int(num) <= 182:
                    return '006a'
                if int(num) <= 1581:
                    return '006b'
                else:
                    return '005b'
            if i <= 38:
                return '005b'
            if i == 39:
                if int(num) <= 51:
                    return '005b'
                if int(num) <= 80:
                    return '007a'
                if int(num) <= 560:
                    return '008a'
                if int(num) <= 2480:
                    return '008b'
                else:
                    return '007b'
            if i == 40:
                if int(num) <= 487:
                    return '007b'
                if int(num) <= 729:
                    return '009a'
                else:
                    return '010a'
            if i <= 44:
                return '010a'
            if i == 45:
                if int(num) <= 65:
                    return '010a'
                if int(num) <= 115:
                    return '010b'
                if int(num) <= 123:
                    return '009b'
                if int(num) <= 155:
                    return '011a'
                if int(num) <= 329:
                    return '012a'
                if int(num) <= 516:
                    return '012b'
                if int(num) <= 1085:
                    return '011b'
                else:
                    return '013a'
            if i == 46:
                if int(num) <= 64:
                    return '013a'
                if int(num) <= 490:
                    return '014a'
                if int == 491:
                    return '014b'
                if int(num) <= 551:
                    return '013b'
                if int(num) <= 651:
                    return '015a'
                if int(num) <= 1180:
                    return '016a'
                if int(num) <= 1245:
                    return '016b'
                if int(num) <= 1430:
                    return '015b'
                if int(num) <= 1537:
                    return '017a'
                if int(num) <= 2095:
                    return '017b'
                if int(num) <= 2361:
                    return '018a'
                if int(num) <= 2440:
                    return '018b'
                if int(num) <= 2555:
                    return '019a'
                if int(num) <= 2595:
                    return '019b'
                if int(num) <= 2630:
                    return '020a'
                if int(num) <= 2675:
                    return '020b'
                if int(num) <= 2785:
                    return '021a'
                else:
                    return '021b'
            if i == 47:
                if int(num) <= 21:
                    return '021b'
                if int(num) <= 75:
                    return '022a'
                if int(num) <= 95:
                    return '022b'
                if int(num) <= 198:
                    return '023a'
                if int(num) <= 304:
                    return '023b'
                if int(num) <= 704:
                    return '024a'
                if int(num) <= 766:
                    return '024b'
                if int(num) <= 979:
                    return '025a'
                else:
                    return '025b'
            if i <= 48:
                return '025b'
            if i == 49:
                if int(num) <= 29:
                    return '025b'
                if int(num) <= 600:
                    return '026a'
                if int(num) <= 652:
                    return '026b'
                if int(num) <= 1464:
                    return '027a'
                if int(num) <= 2063:
                    return '027b'
                if int(num) <= 2595:
                    return '028a'
                if int(num) <= 3461:
                    return '028b'
                if int(num) <= 3785:
                    return '029a'
                if int(num) <= 4011:
                    return '029b'
                if int(num) <= 4211:
                    return '030a'
                if int(num) <= 4438:
                    return '030b'
                if int(num) <= 4596:
                    return '031a'
                else:
                    return '031b'
            if i <= 50:
                return '031b'
            if i == 51:
                if int(num) <= 891:
                    return '031b'
                if int(num) <= 4827:
                    return '032a'
                else:
                    return '032b'
            if i == 52:
                if int(num) <= 9322:
                    return '033a'
                else:
                    return '033b'
            if i <= 74:
                return '033b'


def load_graphic(shelf):
    sgraphic = "images/search/" + shelf + ".jpg"
    print('\n')
    webbrowser.open(sgraphic)
    print(shelf)
    time.sleep(10)
    print('\n')


def finish():
    print('Would you like to search again?')
    response = input("y/n? ")
    while response != "y" and response != "n":
        response = input('please input a valid command.\ny/n? ')
    if response == "y":
        return True
    if response == "n":
        return False


def optSelect():
    print('Would you like to 1) view a general map of Nicholson Library or 2) find a specific location?')
    option = input('option: ')
    while option != "1" and option != "2":
        option = input('please enter a valid option. \noption: ')
    return option


def bookmap():
    on = True
    while on:
        shelf = callNum()
        load_graphic(shelf)
        on = finish()
        time.sleep(1)
        os.system('cls' if os.name == 'nt' else 'clear')


def loadMap():
    os.system('cls' if os.name == 'nt' else 'clear')
    webbrowser.open('nicmap.jpg')
    time.sleep(10)
    input('Press Enter when done.')


def gatherType():
    print('''Please select the type of room from the following list:
1- Study Room | 2- Computers | 3- Library Services | 4- Printers | 5- Other''')
    rtype = input("Option: ")
    while rtype != '1' and rtype != '2' and rtype != '3' and rtype != '4' and rtype != '5':
        rtype = input("Please enter a valid number: ")
    return rtype


def gatherRoom(loctype):
    valid = False
    while not valid:
        rooms = "All, "
        if loctype == '1':
            room_list = ["Room 040", "Room 101", "Room 104", "Room 106", "Room 248", "Room 250", "Room 251", "Room 252", "Room 253"]
        if loctype == '2':
            room_list = ["24 Hour Lab", "Deubach Room", "Skylight Area", "Ground Floor West"]
        if loctype == '3':
            room_list = ["Information Desk", "Tech Specialist", "NicMedia", "York Collection", "Archives", "Lockers", "KACE"]
        if loctype == '4':
            room_list = ["LibOrange", "LibGreen", "LibBlue", "LibRed"]
        if loctype == '5':
            room_list = ["Scholar's Nest", "IDEA-U", "Commuter Corner", "Book Drop"]
        for i in range(len(room_list)):
            rooms += (room_list[i] + ", ")
        rooms += "Back"
        print(rooms)
        searchinput = input('Please type you choice: ')
        for i in range(len(room_list)):
            if searchinput == room_list[i] and searchinput != 'Back' and searchinput != 'All':
                searchrequest = searchinput
                valid = True
                return searchrequest
        if searchinput == "All":
            searchrequest = searchinput
            searchrequest += loctype
            return searchrequest
        if searchinput == "Back":
            print('''Please select the type of room from the following list:
1- Study Room | 2- Computers | 3- Library Services | 4- Printers | 5- Other''')
            loctype = input("Option: ")


def load_rgraphic(room):
    sgraphic = room + ".jpg"
    print('\n')
    webbrowser.open(sgraphic)
    print(room)
    time.sleep(10)
    print('\n')


def showLoc():
    on = True
    while on:
        loctype = gatherType()
        room = gatherRoom(loctype)
        load_rgraphic(room)
        on = finish()
        time.sleep(1)
        os.system('cls' if os.name == 'nt' else 'clear')


def libmap():
    option = optSelect()
    if option == "1":
        loadMap()
    else:
        showLoc()
    os.system('cls' if os.name == 'nt' else 'clear')


def main():
    sysOn = True
    while sysOn:
        os.system('cls' if os.name == 'nt' else 'clear')
        print('''Welcome to the Robert A. Nicholson Library.
Would you like to search for 1) a bookshelf or 2) a room?''')
        mode = input('option: ')
        while mode != "1" and mode != "2":
            mode = input('please enter a valid option. \noption: ')
        if mode == "1":
            bookmap()
        if mode == "2":
            libmap()

main()
		</py-script>
    </div>
</main>

<footer style="border-top:.25em solid var(--au-orange);box-shadow:0 -9px 8px 0px rgba(0,0,0,.4);position:relative;">
    <div class="footernav">
        <!-- Library Links -->
        <div class="left">
            <nav class="nav flex-column">
                <h3>Helpful Library Links</h3>

                {{ page.helpful_links }}

            </nav>
            &nbsp;
            <p style="margin-top:-1.5em; font-size:.75em;"><a href="/hours">Today's Hours: <span class="displayHours"></span></a></p>
        </div>

        <!-- University Links -->
        <div class="right">
            <nav class="nav flex-column">
                <h3>University Links</h3>

                {{ page.university_links}}

            </nav>
        </div>
    </div>
</footer>

<overlay>
	<button id="chat-button" class="btn btn-lg"><i class="far fa-question-circle"></i> Chat with a Librarian</button>
	<div id="iframeHolder" data-lh3-jid="nicref@chat.libraryh3lp.com"></div>
	<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
	<div class="btn-group dropup">
		<button type="button" id="light_switch" class="btn btn-secondary"><i class="far fa-lightbulb"></i></button>
		<button type="button" class="btn btn-secondary dropdown-toggle" id="lang-button" data-bs-toggle="dropdown" aria-expanded="false" aria-label="Change Language">
			<i class="fas fa-globe-americas"></i>
		</button>
		<ul class="dropdown-menu">
			<li><a class="dropdown-item" href="/">English</a></li>
			<li><a class="dropdown-item disabled">Español</a></li>
			<li><a class="dropdown-item" href="/fr">Français</a></li>
		</ul>
	</div>
</overlay>
